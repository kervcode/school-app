{"ast":null,"code":"var _jsxFileName = \"/Users/kervintznoel/Documents/GitHub/school-app-fend/src/components/UpdateCourse.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Form from './Form';\n\nclass UpdateCourse extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      courseId: '',\n      userId: '',\n      title: '',\n      description: '',\n      estimatedTime: '',\n      materialsNeeded: '',\n      ownerFirstName: '',\n      ownerLastName: '',\n      errors: []\n    };\n\n    this.getCourseDetail = () => {\n      const context = this.props.context;\n      const authUser = context.authenticatedUser;\n      const currentUserEmail = authUser.emailAddress; // console.log(\"Context:\", context);\n\n      const id = this.props.match.params.id;\n      axios.get(\"http://localhost:5000/api/courses/\".concat(id)).then(response => {\n        const ownerEmail = response.data.Owner.emailAddress;\n\n        if (ownerEmail !== currentUserEmail) {\n          this.props.history.push('/forbidden');\n        } else {\n          this.setState({\n            userId: response.data.Owner.id,\n            title: response.data.title,\n            description: response.data.description,\n            estimatedTime: response.data.estimatedTime,\n            materialsNeeded: response.data.materialsNeeded,\n            ownerFirstName: response.data.Owner.firstName,\n            ownerLastName: response.data.Owner.lastName\n          });\n        }\n      }).catch(error => {\n        /**\n         * this block catches error messages and redirect the user to \n         * a specific route according to which error message status code that occurs\n         */\n        if (error.response.status === 404) {\n          this.props.history.push('/notfound');\n        } else if (error.response.status === 403) {\n          this.props.history.push('/forbidden');\n        } else {\n          this.props.history.push('/error');\n        }\n      });\n    };\n\n    this.change = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n      this.setState(() => {\n        return {\n          [name]: value\n        };\n      });\n    };\n\n    this.submit = () => {\n      const context = this.props.context;\n      const authUser = context.authenticatedUser;\n      const emailAddress = authUser.emailAddress;\n      const password = authUser.password; // destructuring state values\n\n      const _this$state = this.state,\n            userId = _this$state.userId,\n            title = _this$state.title,\n            description = _this$state.description,\n            estimatedTime = _this$state.estimatedTime,\n            materialsNeeded = _this$state.materialsNeeded; // new course payload\n\n      const course = {\n        userId,\n        title,\n        description,\n        estimatedTime,\n        materialsNeeded\n      };\n      const id = this.props.match.params.id;\n      /**\n       * Update a course\n       *\n       * @param {course}  The course payload to update.\n       * @param {id} id of the course to update.\n       * @param {emailAddress} emailAddress of the authenticate user.\n       * @param {password} password of the authenticate user\n       * @return {promise} resolved value is either an array of errors \n       * (sent from the API if the response is 400), or an empty array (if the response is 201)\n       */\n\n      context.data.updateCourse(course, id, emailAddress, password).then(errors => {\n        if (errors.message) {\n          this.setState({\n            errors: errors.message\n          });\n        } else {\n          console.log('Course updated sussessfully');\n          this.props.history.push(\"/\");\n        }\n      }).catch(err => {\n        this.props.history.push('/error');\n      });\n    };\n\n    this.cancel = () => {\n      this.props.history.go(-1);\n    };\n  }\n\n  componentDidMount() {\n    this.getCourseDetail();\n  }\n  /**\n   * use axios to submit a GET request for a course by it's ID\n   * then set the response data to the state object\n   */\n\n\n  render() {\n    const _this$state2 = this.state,\n          title = _this$state2.title,\n          description = _this$state2.description,\n          estimatedTime = _this$state2.estimatedTime,\n          materialsNeeded = _this$state2.materialsNeeded,\n          ownerFirstName = _this$state2.ownerFirstName,\n          ownerLastName = _this$state2.ownerLastName,\n          errors = _this$state2.errors;\n    /**\n     * Render an update form that allows user the user a course that he owns\n     */\n\n    return React.createElement(\"div\", {\n      className: \"bounds course--detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Update Course\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Form, {\n      cancel: this.cancel,\n      errors: errors,\n      submit: this.submit,\n      submitButtonText: \"Update Course\",\n      elements: () => React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grid-66\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"course--header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"course--label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Course\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"title\",\n        name: \"title\",\n        type: \"text\",\n        className: \"input-title course--title--input\",\n        placeholder: \"Course title...\",\n        value: title,\n        onChange: this.change,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"By \", ownerFirstName, \" \", ownerLastName)), React.createElement(\"div\", {\n        className: \"course--description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        id: \"description\",\n        name: \"description\",\n        className: \"\",\n        value: description,\n        onChange: this.change,\n        placeholder: \"Course description...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"grid-25 grid-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"course--stats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"course--stats--list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"course--stats--list--item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Estimated Time\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"estimatedTime\",\n        name: \"estimatedTime\",\n        type: \"text\",\n        className: \"course--time--input\",\n        placeholder: \"Hours\",\n        value: estimatedTime,\n        onChange: this.change,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }))), React.createElement(\"li\", {\n        className: \"course--stats--list--item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Materials Needed\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        id: \"materialsNeeded\",\n        name: \"materialsNeeded\",\n        className: \"\",\n        placeholder: \"List materials...\",\n        value: materialsNeeded,\n        onChange: this.change,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      })))))))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default UpdateCourse;","map":{"version":3,"sources":["/Users/kervintznoel/Documents/GitHub/school-app-fend/src/components/UpdateCourse.js"],"names":["React","Component","axios","Form","UpdateCourse","state","courseId","userId","title","description","estimatedTime","materialsNeeded","ownerFirstName","ownerLastName","errors","getCourseDetail","context","props","authUser","authenticatedUser","currentUserEmail","emailAddress","id","match","params","get","then","response","ownerEmail","data","Owner","history","push","setState","firstName","lastName","catch","error","status","change","event","name","target","value","submit","password","course","updateCourse","message","console","log","err","cancel","go","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport Form from './Form';\n\nclass UpdateCourse extends Component {\n  state = {\n    courseId: '',\n    userId: '',\n    title: '',\n    description: '',\n    estimatedTime: '',\n    materialsNeeded: '',\n    ownerFirstName: '',\n    ownerLastName: '',\n    errors: [],\n  }\n\n  componentDidMount() {\n    this.getCourseDetail();\n  }\n\n  /**\n   * use axios to submit a GET request for a course by it's ID\n   * then set the response data to the state object\n   */\n  \n  getCourseDetail = () => {\n\n    const { context } = this.props;\n    const authUser = context.authenticatedUser;\n    const currentUserEmail = authUser.emailAddress;\n    // console.log(\"Context:\", context);\n    const id = this.props.match.params.id;\n  \n    \n    axios\n      .get(`http://localhost:5000/api/courses/${id}`)\n      .then((response) => {\n        const ownerEmail = response.data.Owner.emailAddress;\n        if (ownerEmail !== currentUserEmail) {\n          this.props.history.push('/forbidden');\n        } else {\n        this.setState({\n          userId: response.data.Owner.id,\n          title: response.data.title,\n          description: response.data.description,\n          estimatedTime: response.data.estimatedTime,\n          materialsNeeded: response.data.materialsNeeded,\n          ownerFirstName: response.data.Owner.firstName,\n          ownerLastName: response.data.Owner.lastName\n        });\n      }\n    })\n    .catch(error => {\n      /**\n       * this block catches error messages and redirect the user to \n       * a specific route according to which error message status code that occurs\n       */\n      if(error.response.status === 404) {\n        this.props.history.push('/notfound');\n      } else if(error.response.status === 403) {\n        this.props.history.push('/forbidden');\n      } else {\n        this.props.history.push('/error');\n      }\n    })\n    \n  }\n\n  render() { \n    const {\n      title,\n      description,\n      estimatedTime,\n      materialsNeeded,\n      ownerFirstName,\n      ownerLastName,\n      errors\n    } = this.state;\n    \n    \n/**\n * Render an update form that allows user the user a course that he owns\n */    \n    return ( \n      <div className=\"bounds course--detail\">\n        <h1>Update Course</h1>\n          <div>\n            <Form \n            cancel={this.cancel}\n            errors={errors}\n            submit={this.submit}\n            submitButtonText=\"Update Course\"\n            elements={() => (\n                <React.Fragment>\n                  <div>\n                      <div className=\"grid-66\">\n                        <div className=\"course--header\">\n                            <h4 className=\"course--label\">Course</h4>\n                            <div>\n                              <input \n                                    id=\"title\" \n                                    name=\"title\" \n                                    type=\"text\" \n                                    className=\"input-title course--title--input\" \n                                    placeholder=\"Course title...\"\n                                    value={title}\n                                    onChange={this.change} />\n                            </div>\n                          <p>By {ownerFirstName} {ownerLastName}</p>\n                        </div>\n                        \n                        <div className=\"course--description\">\n                          <div>\n                              <textarea \n                                  id=\"description\" \n                                  name=\"description\" \n                                  className=\"\" \n                                  value={description}\n                                  onChange={this.change}\n                                  placeholder=\"Course description...\">                                  \n                              </textarea>\n                            </div>\n                        </div>\n                      </div>\n                      <div className=\"grid-25 grid-right\">\n                        <div className=\"course--stats\">\n                          <ul className=\"course--stats--list\">\n                            <li className=\"course--stats--list--item\">\n                              <h4>Estimated Time</h4>\n                              <div>\n                                <input \n                                    id=\"estimatedTime\" \n                                    name=\"estimatedTime\" \n                                    type=\"text\" \n                                    className=\"course--time--input\"\n                                    placeholder=\"Hours\" \n                                    value={estimatedTime}\n                                    onChange={this.change}                                   \n                                  />\n                              </div>\n                            </li>\n                            <li className=\"course--stats--list--item\">\n                              <h4>Materials Needed</h4>\n                              <div>\n                                  <textarea \n                                    id=\"materialsNeeded\" \n                                    name=\"materialsNeeded\" \n                                    className=\"\" \n                                    placeholder=\"List materials...\"\n                                    value={materialsNeeded}\n                                    onChange={this.change}\n                                  ></textarea>\n                                </div>\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                  </div>\n                </React.Fragment>\n              )  \n            }\n            />\n          </div>\n      </div>\n    );\n  }\n  \n  change = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    this.setState(() => {\n      return {\n        [name]: value\n      };\n    });\n  }\n  \n /**\n * use to update a course.\n */\n  submit = () => {  \n    const { context } = this.props;    \n    const authUser = context.authenticatedUser;\n\n    const emailAddress = authUser.emailAddress;\n    const password = authUser.password;\n    \n    // destructuring state values\n    const {\n      userId,\n      title,\n      description,\n      estimatedTime,\n      materialsNeeded,\n    } = this.state;\n    \n    // new course payload\n    const course = {\n      userId,\n      title,\n      description,\n      estimatedTime,\n      materialsNeeded,\n    }\n    \n    const id = this.props.match.params.id;\n\n    /**\n     * Update a course\n     *\n     * @param {course}  The course payload to update.\n     * @param {id} id of the course to update.\n     * @param {emailAddress} emailAddress of the authenticate user.\n     * @param {password} password of the authenticate user\n     * @return {promise} resolved value is either an array of errors \n     * (sent from the API if the response is 400), or an empty array (if the response is 201)\n     */\n    \n    context.data.updateCourse(course, id, emailAddress, password)\n      .then( errors => {\n          if(errors.message) {\n            this.setState({ errors: errors.message });\n          } else {\n            console.log('Course updated sussessfully');\n            this.props.history.push(\"/\");\n          }\n      })\n      .catch(err => {\n          this.props.history.push('/error');\n      })\n  }\n\n  // return to previousPage\n  cancel = () => {\n    this.props.history.go(-1);\n  }\n}\n \nexport default UpdateCourse;"]},"metadata":{},"sourceType":"module"}