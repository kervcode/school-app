{"ast":null,"code":"var _jsxFileName = \"/Users/kervintznoel/Documents/GitHub/school-app-fend/src/components/CourseDetail.js\";\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport ReactMarkdown from 'react-markdown';\nimport axios from 'axios';\n\nclass CourseDetail extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: '',\n      title: '',\n      description: '',\n      estimatedTime: '',\n      materialsNeeded: '',\n      ownerFirstName: '',\n      ownerLastName: '',\n      ownerEmailAddress: '' // When Component mounted\n\n    };\n\n    this.getCourseDetail = () => {\n      const id = this.props.match.params.id;\n      axios.get(\"http://localhost:5000/api/courses/\".concat(id)).then(response => {\n        this.setState({\n          id: response.data.id,\n          title: response.data.title,\n          description: response.data.description,\n          estimatedTime: response.data.estimatedTime,\n          materialsNeeded: response.data.materialsNeeded,\n          ownerFirstName: response.data.Owner.firstName,\n          ownerLastName: response.data.Owner.lastName,\n          ownerEmailAddress: response.data.Owner.emailAddress\n        });\n      }).catch(error => {\n        /**\n         * this block catches error messages and redirect the user to \n         * a specific route according to which error message status code that occurs\n         */\n        if (error.response.status === 404) {\n          this.props.history.push('/notfound');\n        } else if (error.response.status === 403) {\n          this.props.history.push('/forbidden');\n        } else {\n          this.props.history.push('/error');\n        }\n      });\n    };\n\n    this.delete = () => {\n      const context = this.props.context;\n      const authUser = context.authenticatedUser;\n      const emailAddress = authUser.emailAddress;\n      const password = authUser.password; // destructuring value from state\n\n      const _this$state = this.state,\n            id = _this$state.id,\n            title = _this$state.title,\n            description = _this$state.description,\n            estimatedTime = _this$state.estimatedTime,\n            materialsNeeded = _this$state.materialsNeeded; // course payload\n\n      const course = {\n        id,\n        title,\n        description,\n        estimatedTime,\n        materialsNeeded\n        /**\n        * delete a course\n        *\n        * @param {course}  The course payload to delete.\n        * @param {id} id of the course to delete.\n        * @param {emailAddress} emailAddress of the authenticate user.\n        * @param {password} password of the authenticate user\n        * @return {promise} resolved value is either an array of errors \n        * (sent from the API if the response is 400), or an empty array (if the response is 201)\n        */\n\n      };\n      context.data.deleteCourse(course, id, emailAddress, password).then(errors => {\n        if (errors.message) {\n          this.setState({\n            errors: errors.message\n          });\n        } else {\n          console.log('Course delete successfully');\n          this.props.history.push(\"/\");\n        }\n      }).catch(err => {\n        this.props.history.push('/error');\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getCourseDetail();\n  }\n\n  render() {\n    const context = this.props.context;\n    const _this$state2 = this.state,\n          id = _this$state2.id,\n          title = _this$state2.title,\n          description = _this$state2.description,\n          estimatedTime = _this$state2.estimatedTime,\n          materialsNeeded = _this$state2.materialsNeeded,\n          ownerFirstName = _this$state2.ownerFirstName,\n          ownerLastName = _this$state2.ownerLastName,\n          ownerEmailAddress = _this$state2.ownerEmailAddress;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"actions--bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, // CREATE LOGIC TO RENDER UPDATE AND DELETE BUTTON ONLY IF THERE IS AN AUTHENTICATED USER.\n    context.authenticatedUser !== null && context.authenticatedUser.emailAddress === ownerEmailAddress ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"bounds\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"grid-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"button\",\n      to: \"/Courses/\".concat(id, \"/update\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Update Course\"), React.createElement(\"button\", {\n      className: \"button\",\n      onClick: this.delete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Delete Course\")), React.createElement(Link, {\n      className: \"button button-secondary\",\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Return to List\")))) : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"bounds\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"grid-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"button button-secondary\",\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Return to List\"))))), React.createElement(\"div\", {\n      className: \"bounds course--detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"grid-66\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"course--header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"course--label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Course\"), React.createElement(\"h3\", {\n      className: \"course--title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, title), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"By \", ownerFirstName, \" \", ownerLastName)), React.createElement(\"div\", {\n      className: \"course--description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(ReactMarkdown, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, description))), React.createElement(\"div\", {\n      className: \"grid-25 grid-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"course--stats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"course--stats--list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"course--stats--list--item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Estimated Time\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, estimatedTime)), React.createElement(\"li\", {\n      className: \"course--stats--list--item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Materials Needed\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(ReactMarkdown, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, materialsNeeded))))))));\n  } // to delete course on the backend\n\n\n}\n\nexport default CourseDetail;","map":{"version":3,"sources":["/Users/kervintznoel/Documents/GitHub/school-app-fend/src/components/CourseDetail.js"],"names":["React","Component","Link","ReactMarkdown","axios","CourseDetail","state","id","title","description","estimatedTime","materialsNeeded","ownerFirstName","ownerLastName","ownerEmailAddress","getCourseDetail","props","match","params","get","then","response","setState","data","Owner","firstName","lastName","emailAddress","catch","error","status","history","push","delete","context","authUser","authenticatedUser","password","course","deleteCourse","errors","message","console","log","err","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACjCK,KADiC,GACzB;AACNC,MAAAA,EAAE,EAAE,EADE;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,WAAW,EAAE,EAHP;AAINC,MAAAA,aAAa,EAAE,EAJT;AAKNC,MAAAA,eAAe,EAAE,EALX;AAMNC,MAAAA,cAAc,EAAE,EANV;AAONC,MAAAA,aAAa,EAAE,EAPT;AAQNC,MAAAA,iBAAiB,EAAE,EARb,CAWV;;AAXU,KADyB;;AAAA,SAiBnCC,eAjBmC,GAiBjB,MAAM;AACtB,YAAMR,EAAE,GAAG,KAAKS,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBX,EAAnC;AACAH,MAAAA,KAAK,CAACe,GAAN,6CAA+CZ,EAA/C,GACCa,IADD,CACOC,QAAD,IAAc;AAClB,aAAKC,QAAL,CAAc;AACZf,UAAAA,EAAE,EAAEc,QAAQ,CAACE,IAAT,CAAchB,EADN;AAEZC,UAAAA,KAAK,EAAEa,QAAQ,CAACE,IAAT,CAAcf,KAFT;AAGZC,UAAAA,WAAW,EAAEY,QAAQ,CAACE,IAAT,CAAcd,WAHf;AAIZC,UAAAA,aAAa,EAAEW,QAAQ,CAACE,IAAT,CAAcb,aAJjB;AAKZC,UAAAA,eAAe,EAAEU,QAAQ,CAACE,IAAT,CAAcZ,eALnB;AAMZC,UAAAA,cAAc,EAAES,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBC,SANxB;AAOZZ,UAAAA,aAAa,EAAEQ,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBE,QAPvB;AAQZZ,UAAAA,iBAAiB,EAAEO,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBG;AAR3B,SAAd;AAUD,OAZD,EAaCC,KAbD,CAaOC,KAAK,IAAI;AACd;;;;AAIA,YAAGA,KAAK,CAACR,QAAN,CAAeS,MAAf,KAA0B,GAA7B,EAAkC;AAChC,eAAKd,KAAL,CAAWe,OAAX,CAAmBC,IAAnB,CAAwB,WAAxB;AACD,SAFD,MAEO,IAAGH,KAAK,CAACR,QAAN,CAAeS,MAAf,KAA0B,GAA7B,EAAkC;AACvC,eAAKd,KAAL,CAAWe,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACD,SAFM,MAEA;AACL,eAAKhB,KAAL,CAAWe,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACD;AACF,OAzBD;AA0BC,KA7CgC;;AAAA,SA+HnCC,MA/HmC,GA+H1B,MAAM;AAAA,YACLC,OADK,GACO,KAAKlB,KADZ,CACLkB,OADK;AAEb,YAAMC,QAAQ,GAAGD,OAAO,CAACE,iBAAzB;AAEA,YAAMT,YAAY,GAAGQ,QAAQ,CAACR,YAA9B;AACA,YAAMU,QAAQ,GAAGF,QAAQ,CAACE,QAA1B,CALa,CAOb;;AAPa,0BAcT,KAAK/B,KAdI;AAAA,YASXC,EATW,eASXA,EATW;AAAA,YAUXC,KAVW,eAUXA,KAVW;AAAA,YAWXC,WAXW,eAWXA,WAXW;AAAA,YAYXC,aAZW,eAYXA,aAZW;AAAA,YAaXC,eAbW,eAaXA,eAbW,EAgBb;;AACA,YAAM2B,MAAM,GAAG;AACb/B,QAAAA,EADa;AAEbC,QAAAA,KAFa;AAGbC,QAAAA,WAHa;AAIbC,QAAAA,aAJa;AAKbC,QAAAA;AAGA;;;;;;;;;;;AARa,OAAf;AAkBAuB,MAAAA,OAAO,CAACX,IAAR,CAAagB,YAAb,CAA0BD,MAA1B,EAAkC/B,EAAlC,EAAsCoB,YAAtC,EAAoDU,QAApD,EACGjB,IADH,CACSoB,MAAM,IAAI;AACb,YAAGA,MAAM,CAACC,OAAV,EAAmB;AACjB,eAAKnB,QAAL,CAAc;AAAEkB,YAAAA,MAAM,EAAEA,MAAM,CAACC;AAAjB,WAAd;AACD,SAFD,MAEO;AACLC,UAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,eAAK3B,KAAL,CAAWe,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD;AACJ,OARH,EASGJ,KATH,CASUgB,GAAG,IAAI;AACb,aAAK5B,KAAL,CAAWe,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACD,OAXH;AAYC,KA9KgC;AAAA;;AAanCa,EAAAA,iBAAiB,GAAG;AAClB,SAAK9B,eAAL;AACD;;AA+BD+B,EAAAA,MAAM,GAAG;AAAA,UACCZ,OADD,GACa,KAAKlB,KADlB,CACCkB,OADD;AAAA,yBAYH,KAAK5B,KAZF;AAAA,UAILC,EAJK,gBAILA,EAJK;AAAA,UAKLC,KALK,gBAKLA,KALK;AAAA,UAMLC,WANK,gBAMLA,WANK;AAAA,UAOLC,aAPK,gBAOLA,aAPK;AAAA,UAQLC,eARK,gBAQLA,eARK;AAAA,UASLC,cATK,gBASLA,cATK;AAAA,UAULC,aAVK,gBAULA,aAVK;AAAA,UAWLC,iBAXK,gBAWLA,iBAXK;AAeP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AACAoB,IAAAA,OAAO,CAACE,iBAAR,KAA8B,IAA9B,IAAsCF,OAAO,CAACE,iBAAR,CAA0BT,YAA1B,KAA2Cb,iBAAjF,GACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAyB,MAAA,EAAE,qBAAcP,EAAd,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAE,KAAK0B,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,CADF,EAKE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,yBAAhB;AAA0C,MAAA,EAAE,EAAC,GAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF,CADF,CADA,CADF,GAaE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,yBAAhB;AAA0C,MAAA,EAAE,EAAC,GAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,CADF,CAjBN,CADA,EA4BA;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BzB,KAA/B,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAQI,cAAR,OAAyBC,aAAzB,CAHF,CADF,EAME;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,WADH,CADJ,CANF,CADF,EAaE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,2BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKC,aAAL,CAFF,CADF,EAKE;AAAI,MAAA,SAAS,EAAC,2BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,eADH,CADF,CAFF,CALF,CADF,CADF,CAbF,CA5BA,CADF;AA+DD,GA5HkC,CA8HnC;;;AA9HmC;;AAiLrC,eAAeN,YAAf","sourcesContent":["import React, {Component} from 'react';\nimport { Link } from \"react-router-dom\";\nimport ReactMarkdown from 'react-markdown';\nimport axios from 'axios';\n\nclass CourseDetail extends Component {\n    state = {\n      id: '',\n      title: '',\n      description: '',\n      estimatedTime: '',\n      materialsNeeded: '',\n      ownerFirstName: '',\n      ownerLastName: '',\n      ownerEmailAddress: '',\n    }\n  \n  // When Component mounted\n  componentDidMount() {\n    this.getCourseDetail();\n  }\n   \n  getCourseDetail = () => {\n    const id = this.props.match.params.id;\n    axios.get(`http://localhost:5000/api/courses/${id}`)\n    .then((response) => {\n      this.setState({\n        id: response.data.id,\n        title: response.data.title,\n        description: response.data.description,\n        estimatedTime: response.data.estimatedTime,\n        materialsNeeded: response.data.materialsNeeded,\n        ownerFirstName: response.data.Owner.firstName,\n        ownerLastName: response.data.Owner.lastName,  \n        ownerEmailAddress: response.data.Owner.emailAddress\n      })\n    })\n    .catch(error => {\n      /**\n       * this block catches error messages and redirect the user to \n       * a specific route according to which error message status code that occurs\n       */\n      if(error.response.status === 404) {\n        this.props.history.push('/notfound')\n      } else if(error.response.status === 403) {\n        this.props.history.push('/forbidden')\n      } else {\n        this.props.history.push('/error')\n      }\n    })\n    }\n  render() { \n    const { context } = this.props;\n    \n    const {\n      id,\n      title,\n      description,\n      estimatedTime,\n      materialsNeeded,\n      ownerFirstName,\n      ownerLastName,\n      ownerEmailAddress\n    } = this.state; \n\n  \n    return ( \n      <div>\n      <div className=\"actions--bar\">\n      \n        {\n          // CREATE LOGIC TO RENDER UPDATE AND DELETE BUTTON ONLY IF THERE IS AN AUTHENTICATED USER.\n          context.authenticatedUser !== null && context.authenticatedUser.emailAddress === ownerEmailAddress ?\n            <React.Fragment>\n            <div className=\"bounds\">\n              <div className=\"grid-100\">\n                <span>\n                  <Link className=\"button\" to={`/Courses/${id}/update`}>Update Course</Link>\n                  <button className=\"button\" onClick={this.delete}>Delete Course</button>\n                </span>\n                <Link className=\"button button-secondary\" to=\"/\">Return to List</Link>\n              </div>\n            </div>\n            </React.Fragment>\n          :\n            <React.Fragment>\n              <div className=\"bounds\">\n                <div className=\"grid-100\">\n                  <Link className=\"button button-secondary\" to=\"/\">Return to List</Link></div>\n              </div>\n            </React.Fragment>\n        }\n      \n\n      </div>\n      <div className=\"bounds course--detail\">\n        <div className=\"grid-66\">\n          <div className=\"course--header\">\n            <h4 className=\"course--label\">Course</h4>\n            <h3 className=\"course--title\">{title}</h3>\n            <p>By { ownerFirstName} {ownerLastName}</p>\n          </div>\n          <div className=\"course--description\">\n              <ReactMarkdown>\n                {description}\n              </ReactMarkdown>\n          </div>\n        </div>\n        <div className=\"grid-25 grid-right\">\n          <div className=\"course--stats\">\n            <ul className=\"course--stats--list\">\n              <li className=\"course--stats--list--item\">\n                <h4>Estimated Time</h4>\n                <h3>{estimatedTime}</h3>\n              </li>\n              <li className=\"course--stats--list--item\">\n                <h4>Materials Needed</h4>\n                <ul>\n                  <ReactMarkdown>\n                    {materialsNeeded}\n                  </ReactMarkdown>\n                </ul>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n     );\n  }\n  \n  // to delete course on the backend\n  delete = () => {\n    const { context } = this.props;    \n    const authUser = context.authenticatedUser;\n\n    const emailAddress = authUser.emailAddress;\n    const password = authUser.password;\n\n    // destructuring value from state\n    const {\n      id,\n      title,\n      description,\n      estimatedTime,\n      materialsNeeded,\n    } = this.state; \n\n    // course payload\n    const course = {\n      id,\n      title,\n      description,\n      estimatedTime,\n      materialsNeeded,\n    }\n\n      /**\n     * delete a course\n     *\n     * @param {course}  The course payload to delete.\n     * @param {id} id of the course to delete.\n     * @param {emailAddress} emailAddress of the authenticate user.\n     * @param {password} password of the authenticate user\n     * @return {promise} resolved value is either an array of errors \n     * (sent from the API if the response is 400), or an empty array (if the response is 201)\n     */\n    context.data.deleteCourse(course, id, emailAddress, password)\n      .then( errors => {\n          if(errors.message) {\n            this.setState({ errors: errors.message });\n          } else {\n            console.log('Course delete successfully');\n            this.props.history.push(\"/\");\n          }\n      })\n      .catch( err => {\n        this.props.history.push('/error');\n      })\n    }\n}\n \nexport default CourseDetail;"]},"metadata":{},"sourceType":"module"}