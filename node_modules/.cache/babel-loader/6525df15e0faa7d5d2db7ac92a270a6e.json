{"ast":null,"code":"var _jsxFileName = \"/Users/kervintznoel/Documents/GitHub/school-app-fend/src/components/UserSignUp.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Form from './Form';\nexport default class UserSignUp extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      firstName: '',\n      lastName: '',\n      emailAddress: '',\n      password: '',\n      confirmPassword: '',\n      errors: []\n    };\n\n    this.change = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n      this.setState(() => {\n        return {\n          [name]: value\n        };\n      });\n    };\n\n    this.submit = () => {\n      const context = this.props.context;\n      const _this$state = this.state,\n            firstName = _this$state.firstName,\n            lastName = _this$state.lastName,\n            emailAddress = _this$state.emailAddress,\n            password = _this$state.password,\n            confirmPassword = _this$state.confirmPassword; // New user payload\n\n      const user = {\n        firstName,\n        lastName,\n        emailAddress,\n        password,\n        confirmPassword\n      };\n\n      if (user.password !== user.confirmPassword) {\n        this.setState({\n          errors: ['Password do not match']\n        });\n      } else {\n        context.data.createUser(user).then(errors => {\n          if (errors.message) {\n            this.setState({\n              errors: errors.message\n            });\n          } else {\n            context.actions.signIn(emailAddress, password).then(() => {\n              this.props.history.push('/authenticated');\n            });\n          }\n        }).catch(err => {\n          this.props.history.push('/error');\n        });\n      }\n    };\n\n    this.cancel = () => {\n      this.props.history.push('/');\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          firstName = _this$state2.firstName,\n          lastName = _this$state2.lastName,\n          emailAddress = _this$state2.emailAddress,\n          password = _this$state2.password,\n          confirmPassword = _this$state2.confirmPassword,\n          errors = _this$state2.errors;\n    return React.createElement(\"div\", {\n      className: \"bounds\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"grid-33 centered signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(Form, {\n      cancel: this.cancel,\n      errors: errors,\n      submit: this.submit,\n      submitButtonText: \"Sign Up\",\n      elements: () => React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"firstName\",\n        name: \"firstName\",\n        type: \"text\",\n        value: firstName,\n        onChange: this.change,\n        placeholder: \"First Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"lastName\",\n        name: \"lastName\",\n        type: \"text\",\n        value: lastName,\n        onChange: this.change,\n        placeholder: \"Last Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"emailAdress\",\n        name: \"emailAddress\",\n        type: \"email\",\n        value: emailAddress,\n        onChange: this.change,\n        placeholder: \"Email Address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"password\",\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        onChange: this.change,\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        id: \"confirmPassword\",\n        name: \"confirmPassword\",\n        type: \"password\",\n        value: confirmPassword,\n        onChange: this.change,\n        placeholder: \"Confirm Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Already have a user account? \", React.createElement(Link, {\n      to: \"/signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Click here\"), \" to sign in!\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/kervintznoel/Documents/GitHub/school-app-fend/src/components/UserSignUp.js"],"names":["React","Component","Link","Form","UserSignUp","state","firstName","lastName","emailAddress","password","confirmPassword","errors","change","event","name","target","value","setState","submit","context","props","user","data","createUser","then","message","actions","signIn","history","push","catch","err","cancel","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Form from './Form';\n\nexport default class UserSignUp extends Component {\n  state = {\n    firstName: '',\n    lastName: '',\n    emailAddress: '',\n    password: '',\n    confirmPassword: '',\n    errors: [],\n  }\n\n  render() {    \n    const {\n      firstName,\n      lastName,\n      emailAddress,\n      password,\n      confirmPassword,\n      errors,\n    } = this.state;\n\n    return (\n      <div className=\"bounds\">\n        <div className=\"grid-33 centered signin\">\n          <h1>Sign Up</h1>\n          <Form \n            cancel={this.cancel}\n            errors={errors}\n            submit={this.submit}\n            submitButtonText=\"Sign Up\"\n            elements={() => (\n              <React.Fragment>\n                <input \n                  id=\"firstName\" \n                  name=\"firstName\" \n                  type=\"text\"\n                  value={firstName} \n                  onChange={this.change} \n                  placeholder=\"First Name\" />\n                <input \n                  id=\"lastName\" \n                  name=\"lastName\" \n                  type=\"text\"\n                  value={lastName} \n                  onChange={this.change} \n                  placeholder=\"Last Name\" />\n                <input \n                  id=\"emailAdress\" \n                  name=\"emailAddress\" \n                  type=\"email\"\n                  value={emailAddress} \n                  onChange={this.change} \n                  placeholder=\"Email Address\" />\n                <input \n                  id=\"password\" \n                  name=\"password\"\n                  type=\"password\"\n                  value={password} \n                  onChange={this.change} \n                  placeholder=\"Password\" />\n                <input \n                  id=\"confirmPassword\" \n                  name=\"confirmPassword\"\n                  type=\"password\"\n                  value={confirmPassword} \n                  onChange={this.change} \n                  placeholder=\"Confirm Password\" />\n              </React.Fragment>\n            )} \n              \n          />\n          <p>\n            Already have a user account? <Link to=\"/signin\">Click here</Link> to sign in!\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  change = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    this.setState(() => {\n      return {\n        [name]: value\n      };\n    });\n  }\n\n  submit = () => {\n    const { context } = this.props;\n    \n    const {\n      firstName,\n      lastName,\n      emailAddress, \n      password,\n      confirmPassword,\n    } = this.state;\n    \n    // New user payload\n    const user = {\n      firstName,\n      lastName,\n      emailAddress,\n      password,\n      confirmPassword,\n    };\n    \n    if (user.password  !== user.confirmPassword) {\n       this.setState({ errors: ['Password do not match']});\n    } else {\n      context.data.createUser(user)\n      .then( errors => {\n        if (errors.message) {\n          this.setState( { errors: errors.message });\n        } else {\n          context.actions.signIn(emailAddress, password)\n            .then(() => {\n              this.props.history.push('/authenticated')\n            })\n        }\n      })\n      .catch( err => {\n      this.props.history.push('/error');\n    })\n    }\n    \n    \n  }\n\n  cancel = () => {\n      this.props.history.push('/');\n  }\n}\n"]},"metadata":{},"sourceType":"module"}