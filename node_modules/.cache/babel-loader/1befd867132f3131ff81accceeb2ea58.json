{"ast":null,"code":"var _jsxFileName = \"/Users/kervintznoel/Documents/GitHub/school-app-fend/src/components/CreateCourse.js\";\nimport React, { Component } from 'react';\nimport Form from './Form';\nexport default class CreateCourse extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userId: '',\n      title: '',\n      description: '',\n      estimatedTime: '',\n      materialsNeeded: '',\n      errors: []\n    };\n\n    this.change = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n      this.setState(() => {\n        return {\n          [name]: value\n        };\n      });\n    };\n\n    this.submit = () => {\n      const context = this.props.context;\n      const authUser = context.authenticatedUser;\n      const emailAddress = authUser.emailAddress;\n      const password = authUser.password;\n      const _this$state = this.state,\n            title = _this$state.title,\n            description = _this$state.description,\n            estimatedTime = _this$state.estimatedTime,\n            materialsNeeded = _this$state.materialsNeeded; // create new course\n\n      const course = {\n        title: title,\n        description: description,\n        estimatedTime: estimatedTime,\n        materialsNeeded: materialsNeeded,\n        userId: authUser.id\n        /**\n        * create a new course\n        *\n        * @param {course}  The course payload to create.\n        * @param {emailAddress} emailAddress of the authenticate user.\n        * @param {password} password of the authenticate user\n        * @return {promise} resolved value is either an array of errors \n        * (sent from the API if the response is 400), or an empty array (if the response is 201)\n        */\n\n      };\n      context.data.createCourse(course, emailAddress, password).then(errors => {\n        if (errors.message) {\n          this.setState({\n            errors: errors.message\n          });\n        } else {\n          console.log('Course created sussessfully');\n          this.props.history.push(\"/\");\n        }\n      })\n      /**\n      * this block catches error messages and redirect the user to \n      * a specific route according to which error message status code that occurs\n      */\n      .catch(err => {\n        console.log(err);\n        this.props.history.push('/error');\n      });\n    };\n\n    this.cancel = () => {\n      this.props.history.push('/');\n    };\n  }\n\n  render() {\n    const errors = this.state.errors;\n    const context = this.props.context;\n    const authUser = context.authenticatedUser;\n    return React.createElement(\"div\", {\n      className: \"bounds course--detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Create Course\"), React.createElement(Form, {\n      cancel: this.cancel,\n      errors: errors,\n      submit: this.submit,\n      submitButtonText: \"Create Course\",\n      elements: () => React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grid-66\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"course--header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"course--label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Course\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"title\",\n        name: \"title\",\n        type: \"text\",\n        className: \"input-title course--title--input\",\n        placeholder: \"Course title...\",\n        value: this.title,\n        onChange: this.change,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"By \", authUser.firstName, \" \", authUser.lastName)), React.createElement(\"div\", {\n        className: \"course--description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        id: \"description\",\n        name: \"description\",\n        className: \"\",\n        value: this.description,\n        onChange: this.change,\n        placeholder: \"Course description...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"grid-25 grid-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"course--stats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"course--stats--list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"course--stats--list--item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Estimated Time\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"estimatedTime\",\n        name: \"estimatedTime\",\n        type: \"text\",\n        className: \"course--time--input\",\n        placeholder: \"Hours\",\n        value: this.estimatedTime,\n        onChange: this.change,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }))), React.createElement(\"li\", {\n        className: \"course--stats--list--item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Materials Needed\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        id: \"materialsNeeded\",\n        name: \"materialsNeeded\",\n        className: \"\",\n        placeholder: \"List materials...\",\n        onChange: this.change,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })))))))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/kervintznoel/Documents/GitHub/school-app-fend/src/components/CreateCourse.js"],"names":["React","Component","Form","CreateCourse","state","userId","title","description","estimatedTime","materialsNeeded","errors","change","event","name","target","value","setState","submit","context","props","authUser","authenticatedUser","emailAddress","password","course","id","data","createCourse","then","message","console","log","history","push","catch","err","cancel","render","firstName","lastName"],"mappings":"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","sourcesContent":["import React, { Component} from 'react';\nimport Form from './Form'\n\nexport default class CreateCourse extends Component {\n  state = {\n      userId: '',\n      title: '',\n      description: '',\n      estimatedTime: '',\n      materialsNeeded: '',\n      errors: [],\n    }  \n  \n    \n \n  render() {    \n    const {\n      errors\n    } = this.state;\n        \n    const { context } = this.props;\n    const authUser = context.authenticatedUser;\n        \n    return ( \n      <div className=\"bounds course--detail\">\n        <h1>Create Course</h1>\n        <Form \n          cancel={this.cancel}\n          errors={errors}\n          submit={this.submit}\n          submitButtonText=\"Create Course\"\n          elements={() => (\n              <React.Fragment>\n                 <div>\n                    <div className=\"grid-66\">\n                      <div className=\"course--header\">\n                          <h4 className=\"course--label\">Course</h4>\n                          <div>\n                            <input \n                                  id=\"title\" \n                                  name=\"title\" \n                                  type=\"text\" \n                                  className=\"input-title course--title--input\" \n                                  placeholder=\"Course title...\"\n                                  value={this.title}\n                                  onChange={this.change} />\n                          </div>\n                        <p>By {authUser.firstName} {authUser.lastName}</p>\n                      </div>\n                      \n                      <div className=\"course--description\">\n                        <div>\n                            <textarea \n                                id=\"description\" \n                                name=\"description\" \n                                className=\"\" \n                                value={this.description}\n                                onChange={this.change}\n                                placeholder=\"Course description...\">                                  \n                            </textarea>\n                          </div>\n                      </div>\n                    </div>\n                    \n                    <div className=\"grid-25 grid-right\">\n                      <div className=\"course--stats\">\n                        <ul className=\"course--stats--list\">\n                          <li className=\"course--stats--list--item\">\n                            <h4>Estimated Time</h4>\n                            <div>\n                              <input \n                                  id=\"estimatedTime\" \n                                  name=\"estimatedTime\" \n                                  type=\"text\" \n                                  className=\"course--time--input\"\n                                  placeholder=\"Hours\" \n                                  value={this.estimatedTime}\n                                  onChange={this.change}                                   \n                                />\n                            </div>\n                          </li>\n                          <li className=\"course--stats--list--item\">\n                            <h4>Materials Needed</h4>\n                            <div>\n                                <textarea \n                                  id=\"materialsNeeded\" \n                                  name=\"materialsNeeded\" \n                                  className=\"\" \n                                  placeholder=\"List materials...\"\n                                  onChange={this.change}\n                                  \n                                ></textarea>\n                              </div>\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                </div>\n              </React.Fragment>\n            )  \n          }\n        />\n      </div>\n    );\n  }\n  \n  \n  \n  change = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    this.setState(() => {\n      return {\n        [name]: value\n      };\n    });\n  }\n  \n/**\n * this submit function triggers when the user clicks on the create course button \n * on the create course page.\n * \n * context component is destructured from this.props and from there emailAddress and the password of the user get extracted from \n *  context to then use on the createCourse component as the credentials of the authenticated user. \n */\n  submit = () => {\n   \n    const { context } = this.props;\n    const authUser = context.authenticatedUser;\n\n    const emailAddress = authUser.emailAddress;\n    const password = authUser.password;\n    \n    const {\n      title,\n      description,\n      estimatedTime,\n      materialsNeeded,\n    } = this.state;\n    \n    // create new course\n    const course = {\n      title: title,\n      description: description,\n      estimatedTime: estimatedTime,\n      materialsNeeded: materialsNeeded,\n      userId: authUser.id\n    }\n\n      /**\n     * create a new course\n     *\n     * @param {course}  The course payload to create.\n     * @param {emailAddress} emailAddress of the authenticate user.\n     * @param {password} password of the authenticate user\n     * @return {promise} resolved value is either an array of errors \n     * (sent from the API if the response is 400), or an empty array (if the response is 201)\n     */\n    context.data.createCourse(course, emailAddress, password)\n      .then(\n        errors => {\n          if(errors.message) {\n            this.setState({ errors: errors.message })\n          } else {\n            console.log('Course created sussessfully');\n            this.props.history.push(\"/\")\n          }\n        }\n      )\n         /**\n       * this block catches error messages and redirect the user to \n       * a specific route according to which error message status code that occurs\n       */\n      .catch( err => {\n        console.log(err)\n        this.props.history.push('/error');\n      })\n  }\n  \n  cancel = () => {\n      this.props.history.push('/');\n  }\n}\n"]},"metadata":{},"sourceType":"module"}