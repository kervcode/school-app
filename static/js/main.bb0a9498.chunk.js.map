{"version":3,"sources":["config.js","Data.js","Context.js","components/Header.js","components/NotFound.js","components/Form.js","components/UserSignUp.js","components/UserSignIn.js","components/Courses.js","components/CourseDetail.js","components/CreateCourse.js","components/UpdateCourse.js","components/UnhandledError.js","PrivateRoute.js","components/Forbidden.js","App.js","components/Authenticated.js","components/UserSignOut.js","index.js"],"names":["config","Data","path","method","arguments","length","undefined","body","requireAuth","credentials","url","options","headers","Content-Type","JSON","stringify","encodedCredentials","btoa","concat","emailAddress","password","fetch","this","api","response","status","json","then","data","Error","user","course","id","Context","React","createContext","Provider","_Component","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","authenticatedUser","Cookies","getJSON","signIn","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","getUser","sent","setState","set","abrupt","stop","_x","_x2","apply","signOut","remove","previousPage","history","props","go","inherits","createClass","key","value","actions","goBack","react_default","createElement","children","Component","Consumer","withContext","context","assign","Header","authUser","className","Fragment","firstName","react_router_dom","to","PureComponent","NotFound","useHistory","console","log","onClick","push","type","Form","cancel","errors","submit","submitButtonText","elements","ErrorsDisplay","onSubmit","event","preventDefault","errorsDisplay","map","error","i","UserSignUp","lastName","confirmPassword","change","name","target","defineProperty","_this$state","createUser","message","catch","err","_this2","_this$state2","onChange","placeholder","UserSignIn","from","location","pathname","Courses","getData","axios","get","courses","title","version","xmlns","x","y","viewBox","points","CourseDetail","description","estimatedTime","materialsNeeded","ownerFirstName","ownerLastName","ownerEmailAddress","getCourseDetail","match","params","Owner","delete","deleteCourse","react_markdown_default","CreateCourse","userId","createCourse","UpdateCourse","courseId","currentUserEmail","updateCourse","UnhandledError","PrivateRoute","component","rest","objectWithoutProperties","react_router","render","Forbidden","HeaderWithContext","AuthWithContext","UserSignUpWithContext","UserSignInWithContext","UserSignOutWithContext","useEffect","CourseDetailWithContext","CreateCourseWithContext","UpdateCourseWithContext","ReactDOM","Context_Provider","exact","components_Courses","document","getElementById"],"mappings":"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","file":"static/js/main.bb0a9498.chunk.js","sourcesContent":["\nexport default {\n  apiBaseUrl: 'http://localhost:5000/api',\n};\n","import config from './config';\n\nexport default class Data {\n  api(path, method = 'GET', body = null, requireAuth = false, credentials = null) {\n    const url = config.apiBaseUrl + path;\n  \n    const options = {\n      method,\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8',\n      },\n    };\n\n    if (body !== null) {\n      options.body = JSON.stringify(body);\n    }\n\n    if(requireAuth) {\n      const encodedCredentials = btoa(`${credentials.emailAddress}:${credentials.password}`);\n      \n      options.headers['Authorization'] = `Basic ${encodedCredentials}`;\n    }\n    \n    return fetch(url, options);\n  }\n\n  async getUser(emailAddress, password) {\n    const response = await this.api(`/users`, 'GET', null, true, { emailAddress, password });\n    \n    if (response.status === 200) {\n      return response.json().then(data => {\n        //  console.log(\"data\", data)\n         return data\n      });\n    }\n    else if (response.status === 401) {\n      return null;\n    }\n    else {\n      throw new Error();\n    }\n  }\n  \n  async createUser(user) {\n    const response = await this.api('/users', 'POST', user);\n    if (response.status === 201) {\n      return [];\n    }\n    else if (response.status === 400) {\n      return response.json().then(data => {\n        return data;\n      });\n    }\n    else {\n      throw new Error();\n    }\n  }\n  \n   async updateCourse(course, id, emailAddress, password) {\n    const response = await this.api(`/courses/${id}`, 'PUT', course, true, {\n      emailAddress, password\n    });\n    \n    if (response.status === 204) {\n      return [];\n    }\n    else if (response.status === 400) {\n      return response.json().then(data => {\n        return data;\n      });\n    }\n    else {\n      throw new Error();\n    }\n  }\n  \n  async createCourse(course, emailAddress, password) {\n    const response = await this.api('/courses', 'POST', course, true, {\n      emailAddress, password\n    });\n    \n    if (response.status === 201) {\n      return [];\n    }\n    else if (response.status === 400) {\n      return response.json().then(data => {\n        return data;\n      });\n    }\n    else {\n      throw new Error();\n    }\n  }\n\n\n  async deleteCourse(course, id, emailAddress, password) {\n    const response = await this.api(`/courses/${id}`, \"DELETE\", course, true, { emailAddress, password});\n    \n    if (response.status === 204) {\n      return [];\n    }\n    else if (response.status === 400) {\n      return response.json().then(data => {\n        return data;\n      });\n    }\n    else {\n      throw new Error();\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport Data from './Data';\nimport Cookies from 'js-cookie';\n\n\nconst Context = React.createContext(); \n\nexport class Provider extends Component {\n  state = {\n    authenticatedUser: Cookies.getJSON('authenticatedUser') || null\n  }\n  \n  constructor() {\n    super();\n    this.data = new Data();\n  }\n\n  render() {\n    \n    const { authenticatedUser } = this.state;\n    \n    const value = {\n      authenticatedUser,\n      data: this.data,\n      actions: { //\n        signIn: this.signIn,\n        signOut: this.signOut,\n        goBack: this.previousPage\n      }\n    }\n    \n    return (\n      <Context.Provider value={value}>\n        {this.props.children}\n      </Context.Provider>  \n    );\n  }\n\n  \n  signIn = async (emailAddress, password) => {\n    const user = await this.data.getUser(emailAddress, password);\n    if(user !== null) {\n      user.password = password;\n      this.setState(() => {\n        return {\n          authenticatedUser: user,\n        };\n      });\n      // Set Cookie\n      Cookies.set('authenticatedUser', JSON.stringify(user), { });\n    }\n    return user;\n  }\n\n  signOut = () => {\n    this.setState( () => {\n      return {\n        authenticatedUser: null,\n      }\n    });\n    Cookies.remove('authenticatedUser');\n  }\n\n  previousPage = () => {\n    this.history.props.go(-1)\n  }\n}\n\nexport const Consumer = Context.Consumer;\n\n/**\n * A higher-order component that wraps the provided component in a Context Consumer component.\n * @param {class} Component - A React component.\n * @returns {function} A higher-order component.\n */\n\nexport default function withContext(Component) {\n  return function ContextComponent(props) {\n    return (\n      <Context.Consumer>\n        {context => <Component {...props} context={context} />}\n      </Context.Consumer>\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class Header extends React.PureComponent {\n  render() {\n    \n    const { context } = this.props;\n    const authUser = context.authenticatedUser;\n    \n    return (\n      <div className=\"header\">\n        <div className=\"bounds\">\n          <h1 className=\"header--logo\">Full Stack App</h1>\n          <nav>\n          {/* Conditionally render the content for Header component */}\n          \n          { authUser ?\n              <React.Fragment>\n                <span>Welcome, {authUser.firstName}!</span>\n                <Link to=\"/signout\">Sign Out</Link>\n              </React.Fragment> \n            :\n              <React.Fragment>\n                <Link className=\"signup\" to=\"/signup\">Sign Up</Link>\n                <Link className=\"signin\" to=\"/signin\">Sign In</Link>\n              </React.Fragment>\n          }\n          </nav>\n        </div>\n      </div>\n    );\n  }\n};\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport default () => {\n  const history = useHistory();\n    console.log(history)\n\n    const handleClick = () => {\n        history.push(\"/\");\n    }\n\n  return (\n    <div className=\"bounds\">\n      <h1>Not Found</h1>\n      <p>Sorry! We couldn't find the page you're looking for.</p>\n      <div className=\"pad-bottom\">\n          <button className=\"button\" onClick={handleClick} type=\"submit\"> Return </button>\n      </div>\n    </div>\n  )\n};\n\n","import React from 'react';\n\nexport default (props) => {\n  const {\n    cancel,\n    errors,\n    submit,\n    submitButtonText,\n    elements,\n  } = props;\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    submit();\n  }\n\n  function handleCancel(event) {\n    event.preventDefault();\n    cancel();\n  }\n\n  return (\n    <div>\n      <ErrorsDisplay errors={errors} />\n      <form onSubmit={handleSubmit}>\n        {elements()}\n        <div className=\"pad-bottom\">\n          <button className=\"button\" type=\"submit\">{submitButtonText}</button>\n          <button className=\"button button-secondary\" onClick={handleCancel}>Cancel</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nfunction ErrorsDisplay({ errors }) {\n  let errorsDisplay = null;\n  if (errors.length) {\n    errorsDisplay = (\n      <div>\n        <h2 className=\"validation--errors--label\">Validation errors</h2>\n        <div className=\"validation-errors\">\n          <ul>\n            {errors.map((error, i) => <li key={i}>{error}</li>)}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  return errorsDisplay;\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Form from './Form';\n\nexport default class UserSignUp extends Component {\n  state = {\n    firstName: '',\n    lastName: '',\n    emailAddress: '',\n    password: '',\n    confirmPassword: '',\n    errors: [],\n  }\n\n  render() {    \n    const {\n      firstName,\n      lastName,\n      emailAddress,\n      password,\n      confirmPassword,\n      errors,\n    } = this.state;\n\n    return (\n      <div className=\"bounds\">\n        <div className=\"grid-33 centered signin\">\n          <h1>Sign Up</h1>\n          <Form \n            cancel={this.cancel}\n            errors={errors}\n            submit={this.submit}\n            submitButtonText=\"Sign Up\"\n            elements={() => (\n              <React.Fragment>\n                <input \n                  id=\"firstName\" \n                  name=\"firstName\" \n                  type=\"text\"\n                  value={firstName} \n                  onChange={this.change} \n                  placeholder=\"First Name\" />\n                <input \n                  id=\"lastName\" \n                  name=\"lastName\" \n                  type=\"text\"\n                  value={lastName} \n                  onChange={this.change} \n                  placeholder=\"Last Name\" />\n                <input \n                  id=\"emailAdress\" \n                  name=\"emailAddress\" \n                  type=\"email\"\n                  value={emailAddress} \n                  onChange={this.change} \n                  placeholder=\"Email Address\" />\n                <input \n                  id=\"password\" \n                  name=\"password\"\n                  type=\"password\"\n                  value={password} \n                  onChange={this.change} \n                  placeholder=\"Password\" />\n                <input \n                  id=\"confirmPassword\" \n                  name=\"confirmPassword\"\n                  type=\"password\"\n                  value={confirmPassword} \n                  onChange={this.change} \n                  placeholder=\"Confirm Password\" />\n              </React.Fragment>\n            )} \n              \n          />\n          <p>\n            Already have a user account? <Link to=\"/signin\">Click here</Link> to sign in!\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  change = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    this.setState(() => {\n      return {\n        [name]: value\n      };\n    });\n  }\n\n  submit = () => {\n    const { context } = this.props;\n    \n    const {\n      firstName,\n      lastName,\n      emailAddress, \n      password,\n      confirmPassword,\n    } = this.state;\n    \n    // New user payload\n    const user = {\n      firstName,\n      lastName,\n      emailAddress,\n      password,\n      confirmPassword,\n    };\n    \n    if (user.password  !== user.confirmPassword) {\n       this.setState({ errors: ['Password do not match']});\n    } else {\n      context.data.createUser(user)\n      .then( errors => {\n        if (errors.message) {\n          this.setState( { errors: errors.message });\n        } else {\n          context.actions.signIn(emailAddress, password)\n            .then(() => {\n              this.props.history.push('/authenticated')\n            })\n        }\n      })\n      .catch( err => {\n      this.props.history.push('/error');\n    })\n    }\n    \n    \n  }\n\n  cancel = () => {\n      this.props.history.push('/');\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Form from './Form';\n\nexport default class UserSignIn extends Component {\n  state = {\n    emailAddress: '',\n    password: '',\n    errors: [],\n  }\n\n  render() {\n    const {\n      emailAddress,\n      password,\n      errors,\n    } = this.state;\n\n    return (\n      <div className=\"bounds\">\n        <div className=\"grid-33 centered signin\">\n          <h1>Sign In</h1>\n          <Form \n            cancel={this.cancel}\n            errors={errors}\n            submit={this.submit}\n            submitButtonText=\"Sign In\"\n            elements={() => (\n              <React.Fragment>\n                <input \n                  id=\"emailAddress\" \n                  name=\"emailAddress\" \n                  type=\"text\"\n                  value={emailAddress} \n                  onChange={this.change} \n                  placeholder=\"Email Address\" />\n                <input \n                  id=\"password\" \n                  name=\"password\"\n                  type=\"password\"\n                  value={password} \n                  onChange={this.change} \n                  placeholder=\"Password\" />                \n              </React.Fragment>\n            )} />\n          <p>\n            Don't have a user account? <Link to=\"/signup\">Click here</Link> to sign up!\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  change = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    this.setState(() => {\n      return {\n        [name]: value\n      };\n    });\n  }\n\n  submit = () => {\n    const { context } = this.props;\n    const { from } = this.props.location.state || { from: { pathname: '/authenticated'}};\n    \n    const { emailAddress, password } = this.state;\n    context.actions.signIn(emailAddress, password)\n      .then( user => {\n        if ( user === null) {\n          this.setState(() => {\n            return { errors: [ 'Sign-in was unsuccessful' ] };\n          })\n        } else {\n          this.props.history.push(from)\n          console.log(`SUCCESS! ${emailAddress} is now signed in!`);\n        }\n      })\n      .catch( err => {\n        // console.log(err);\n        this.props.history.push('/error')\n      })\n  }\n\n  cancel = () => {\n    this.props.history.push('/');\n  }\n}\n","import React, { Component } from 'react';\nimport { NavLink } from \"react-router-dom\"\nimport axios from  'axios'\n\nclass Courses extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data : []\n    }\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  // Get all course from the api backend\n  getData = () => {\n    axios.get('https://fullstackreactapp01.herokuapp.com/api/courses')\n      .then((response)=> this.setState({data: response.data}))\n      .catch(error => {\n        if(error.response.status === 403) {\n          this.props.history.push('/forbidden');\n        } else if(error.response.status === 404) {\n          this.props.history.push('/notfound');\n        } else if(error.response.data === 500) {\n          this.props.history.push('/error');\n        } else {\n          this.props.history.push('/error');\n        }\n      })\n  }\n\n  // Render course component\n  render() { \n    // Render all Courses\n    let courses = this.state.data.map( course => (\n      \n      <div className=\"grid-33\" key={course.id}><NavLink className=\"course--module course--link\" to={`/courses/${course.id}`}>\n                <h4 className=\"course--label\">Course</h4>\n                <h3 className=\"course--title\">{course.title}</h3>\n              </NavLink>\n      </div>\n    ))\n\n\n    return ( \n        <div className=\"bounds\">\n          {courses}\n          <div className=\"grid-33\"><NavLink className=\"course--module course--add--module\" to=\"/courses/create\">\n              <h3 className=\"course--add--title\"><svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n                  viewBox=\"0 0 13 13\" className=\"add\">\n                  <polygon points=\"7,6 7,0 6,0 6,6 0,6 0,7 6,7 6,13 7,13 7,7 13,7 13,6 \"></polygon>\n                </svg>New Course</h3>\n            </NavLink>\n          </div>\n        </div>\n     );\n  }\n}\n \nexport default Courses;\n","import React, {Component} from 'react';\nimport { Link } from \"react-router-dom\";\nimport ReactMarkdown from 'react-markdown';\nimport axios from 'axios';\n\nclass CourseDetail extends Component {\n    state = {\n      id: '',\n      title: '',\n      description: '',\n      estimatedTime: '',\n      materialsNeeded: '',\n      ownerFirstName: '',\n      ownerLastName: '',\n      ownerEmailAddress: '',\n    }\n  \n  // When Component mounted\n  componentDidMount() {\n    this.getCourseDetail();\n  }\n   \n  getCourseDetail = () => {\n    const id = this.props.match.params.id;\n    axios.get(`http://localhost:5000/api/courses/${id}`)\n    .then((response) => {\n      this.setState({\n        id: response.data.id,\n        title: response.data.title,\n        description: response.data.description,\n        estimatedTime: response.data.estimatedTime,\n        materialsNeeded: response.data.materialsNeeded,\n        ownerFirstName: response.data.Owner.firstName,\n        ownerLastName: response.data.Owner.lastName,  \n        ownerEmailAddress: response.data.Owner.emailAddress\n      })\n    })\n    .catch(error => {\n      /**\n       * this block catches error messages and redirect the user to \n       * a specific route according to which error message status code that occurs\n       */\n      if(error.response.status === 404) {\n        this.props.history.push('/notfound')\n      } else if(error.response.status === 403) {\n        this.props.history.push('/forbidden')\n      } else {\n        this.props.history.push('/error')\n      }\n    })\n    }\n  render() { \n    const { context } = this.props;\n    \n    const {\n      id,\n      title,\n      description,\n      estimatedTime,\n      materialsNeeded,\n      ownerFirstName,\n      ownerLastName,\n      ownerEmailAddress\n    } = this.state; \n\n  \n    return ( \n      <div>\n      <div className=\"actions--bar\">\n      \n        {\n          // CREATE LOGIC TO RENDER UPDATE AND DELETE BUTTON ONLY IF THERE IS AN AUTHENTICATED USER.\n          context.authenticatedUser !== null && context.authenticatedUser.emailAddress === ownerEmailAddress ?\n            <React.Fragment>\n            <div className=\"bounds\">\n              <div className=\"grid-100\">\n                <span>\n                  <Link className=\"button\" to={`/Courses/${id}/update`}>Update Course</Link>\n                  <button className=\"button\" onClick={this.delete}>Delete Course</button>\n                </span>\n                <Link className=\"button button-secondary\" to=\"/\">Return to List</Link>\n              </div>\n            </div>\n            </React.Fragment>\n          :\n            <React.Fragment>\n              <div className=\"bounds\">\n                <div className=\"grid-100\">\n                  <Link className=\"button button-secondary\" to=\"/\">Return to List</Link></div>\n              </div>\n            </React.Fragment>\n        }\n      \n\n      </div>\n      <div className=\"bounds course--detail\">\n        <div className=\"grid-66\">\n          <div className=\"course--header\">\n            <h4 className=\"course--label\">Course</h4>\n            <h3 className=\"course--title\">{title}</h3>\n            <p>By { ownerFirstName} {ownerLastName}</p>\n          </div>\n          <div className=\"course--description\">\n              <ReactMarkdown>\n                {description}\n              </ReactMarkdown>\n          </div>\n        </div>\n        <div className=\"grid-25 grid-right\">\n          <div className=\"course--stats\">\n            <ul className=\"course--stats--list\">\n              <li className=\"course--stats--list--item\">\n                <h4>Estimated Time</h4>\n                <h3>{estimatedTime}</h3>\n              </li>\n              <li className=\"course--stats--list--item\">\n                <h4>Materials Needed</h4>\n                <ul>\n                  <ReactMarkdown>\n                    {materialsNeeded}\n                  </ReactMarkdown>\n                </ul>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n     );\n  }\n  \n  // to delete course on the backend\n  delete = () => {\n    const { context } = this.props;    \n    const authUser = context.authenticatedUser;\n\n    const emailAddress = authUser.emailAddress;\n    const password = authUser.password;\n\n    // destructuring value from state\n    const {\n      id,\n      title,\n      description,\n      estimatedTime,\n      materialsNeeded,\n    } = this.state; \n\n    // course payload\n    const course = {\n      id,\n      title,\n      description,\n      estimatedTime,\n      materialsNeeded,\n    }\n\n      /**\n     * delete a course\n     *\n     * @param {course}  The course payload to delete.\n     * @param {id} id of the course to delete.\n     * @param {emailAddress} emailAddress of the authenticate user.\n     * @param {password} password of the authenticate user\n     * @return {promise} resolved value is either an array of errors \n     * (sent from the API if the response is 400), or an empty array (if the response is 201)\n     */\n    context.data.deleteCourse(course, id, emailAddress, password)\n      .then( errors => {\n          if(errors.message) {\n            this.setState({ errors: errors.message });\n          } else {\n            console.log('Course delete successfully');\n            this.props.history.push(\"/\");\n          }\n      })\n      .catch( err => {\n        this.props.history.push('/error');\n      })\n    }\n}\n \nexport default CourseDetail;","import React, { Component} from 'react';\nimport Form from './Form'\n\nexport default class CreateCourse extends Component {\n  state = {\n      userId: '',\n      title: '',\n      description: '',\n      estimatedTime: '',\n      materialsNeeded: '',\n      errors: [],\n    }  \n  \n    \n \n  render() {    \n    const {\n      errors\n    } = this.state;\n        \n    const { context } = this.props;\n    const authUser = context.authenticatedUser;\n        \n    return ( \n      <div className=\"bounds course--detail\">\n        <h1>Create Course</h1>\n        <Form \n          cancel={this.cancel}\n          errors={errors}\n          submit={this.submit}\n          submitButtonText=\"Create Course\"\n          elements={() => (\n              <React.Fragment>\n                 <div>\n                    <div className=\"grid-66\">\n                      <div className=\"course--header\">\n                          <h4 className=\"course--label\">Course</h4>\n                          <div>\n                            <input \n                                  id=\"title\" \n                                  name=\"title\" \n                                  type=\"text\" \n                                  className=\"input-title course--title--input\" \n                                  placeholder=\"Course title...\"\n                                  value={this.title}\n                                  onChange={this.change} />\n                          </div>\n                        <p>By {authUser.firstName} {authUser.lastName}</p>\n                      </div>\n                      \n                      <div className=\"course--description\">\n                        <div>\n                            <textarea \n                                id=\"description\" \n                                name=\"description\" \n                                className=\"\" \n                                value={this.description}\n                                onChange={this.change}\n                                placeholder=\"Course description...\">                                  \n                            </textarea>\n                          </div>\n                      </div>\n                    </div>\n                    \n                    <div className=\"grid-25 grid-right\">\n                      <div className=\"course--stats\">\n                        <ul className=\"course--stats--list\">\n                          <li className=\"course--stats--list--item\">\n                            <h4>Estimated Time</h4>\n                            <div>\n                              <input \n                                  id=\"estimatedTime\" \n                                  name=\"estimatedTime\" \n                                  type=\"text\" \n                                  className=\"course--time--input\"\n                                  placeholder=\"Hours\" \n                                  value={this.estimatedTime}\n                                  onChange={this.change}                                   \n                                />\n                            </div>\n                          </li>\n                          <li className=\"course--stats--list--item\">\n                            <h4>Materials Needed</h4>\n                            <div>\n                                <textarea \n                                  id=\"materialsNeeded\" \n                                  name=\"materialsNeeded\" \n                                  className=\"\" \n                                  placeholder=\"List materials...\"\n                                  onChange={this.change}\n                                  \n                                ></textarea>\n                              </div>\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                </div>\n              </React.Fragment>\n            )  \n          }\n        />\n      </div>\n    );\n  }\n  \n  \n  \n  change = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    this.setState(() => {\n      return {\n        [name]: value\n      };\n    });\n  }\n  \n/**\n * this submit function triggers when the user clicks on the create course button \n * on the create course page.\n * \n * context component is destructured from this.props and from there emailAddress and the password of the user get extracted from \n *  context to then use on the createCourse component as the credentials of the authenticated user. \n */\n  submit = () => {\n   \n    const { context } = this.props;\n    const authUser = context.authenticatedUser;\n\n    const emailAddress = authUser.emailAddress;\n    const password = authUser.password;\n    \n    const {\n      title,\n      description,\n      estimatedTime,\n      materialsNeeded,\n    } = this.state;\n    \n    // create new course\n    const course = {\n      title: title,\n      description: description,\n      estimatedTime: estimatedTime,\n      materialsNeeded: materialsNeeded,\n      userId: authUser.id\n    }\n\n      /**\n     * create a new course\n     *\n     * @param {course}  The course payload to create.\n     * @param {emailAddress} emailAddress of the authenticate user.\n     * @param {password} password of the authenticate user\n     * @return {promise} resolved value is either an array of errors \n     * (sent from the API if the response is 400), or an empty array (if the response is 201)\n     */\n    context.data.createCourse(course, emailAddress, password)\n      .then(\n        errors => {\n          if(errors.message) {\n            this.setState({ errors: errors.message })\n          } else {\n            console.log('Course created sussessfully');\n            this.props.history.push(\"/\")\n          }\n        }\n      )\n         /**\n       * this block catches error messages and redirect the user to \n       * a specific route according to which error message status code that occurs\n       */\n      .catch( err => {\n        console.log(err)\n        this.props.history.push('/error');\n      })\n  }\n  \n  cancel = () => {\n      this.props.history.push('/');\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Form from './Form';\n\nclass UpdateCourse extends Component {\n  state = {\n    courseId: '',\n    userId: '',\n    title: '',\n    description: '',\n    estimatedTime: '',\n    materialsNeeded: '',\n    ownerFirstName: '',\n    ownerLastName: '',\n    errors: [],\n  }\n\n  componentDidMount() {\n    this.getCourseDetail();\n  }\n\n  /**\n   * use axios to submit a GET request for a course by it's ID\n   * then set the response data to the state object\n   */\n  \n  getCourseDetail = () => {\n\n    const { context } = this.props;\n    const authUser = context.authenticatedUser;\n    const currentUserEmail = authUser.emailAddress;\n    // console.log(\"Context:\", context);\n    const id = this.props.match.params.id;\n  \n    \n    axios\n      .get(`http://localhost:5000/api/courses/${id}`)\n      .then((response) => {\n        const ownerEmail = response.data.Owner.emailAddress;\n        if (ownerEmail !== currentUserEmail) {\n          this.props.history.push('/forbidden');\n        } else {\n        this.setState({\n          userId: response.data.Owner.id,\n          title: response.data.title,\n          description: response.data.description,\n          estimatedTime: response.data.estimatedTime,\n          materialsNeeded: response.data.materialsNeeded,\n          ownerFirstName: response.data.Owner.firstName,\n          ownerLastName: response.data.Owner.lastName\n        });\n      }\n    })\n    .catch(error => {\n      /**\n       * this block catches error messages and redirect the user to \n       * a specific route according to which error message status code that occurs\n       */\n      if(error.response.status === 404) {\n        this.props.history.push('/notfound');\n      } else if(error.response.status === 403) {\n        this.props.history.push('/forbidden');\n      } else {\n        this.props.history.push('/error');\n      }\n    })\n    \n  }\n\n  render() { \n    const {\n      title,\n      description,\n      estimatedTime,\n      materialsNeeded,\n      ownerFirstName,\n      ownerLastName,\n      errors\n    } = this.state;\n    \n    \n/**\n * Render an update form that allows user the user a course that he owns\n */    \n    return ( \n      <div className=\"bounds course--detail\">\n        <h1>Update Course</h1>\n          <div>\n            <Form \n            cancel={this.cancel}\n            errors={errors}\n            submit={this.submit}\n            submitButtonText=\"Update Course\"\n            elements={() => (\n                <React.Fragment>\n                  <div>\n                      <div className=\"grid-66\">\n                        <div className=\"course--header\">\n                            <h4 className=\"course--label\">Course</h4>\n                            <div>\n                              <input \n                                    id=\"title\" \n                                    name=\"title\" \n                                    type=\"text\" \n                                    className=\"input-title course--title--input\" \n                                    placeholder=\"Course title...\"\n                                    value={title}\n                                    onChange={this.change} />\n                            </div>\n                          <p>By {ownerFirstName} {ownerLastName}</p>\n                        </div>\n                        \n                        <div className=\"course--description\">\n                          <div>\n                              <textarea \n                                  id=\"description\" \n                                  name=\"description\" \n                                  className=\"\" \n                                  value={description}\n                                  onChange={this.change}\n                                  placeholder=\"Course description...\">                                  \n                              </textarea>\n                            </div>\n                        </div>\n                      </div>\n                      <div className=\"grid-25 grid-right\">\n                        <div className=\"course--stats\">\n                          <ul className=\"course--stats--list\">\n                            <li className=\"course--stats--list--item\">\n                              <h4>Estimated Time</h4>\n                              <div>\n                                <input \n                                    id=\"estimatedTime\" \n                                    name=\"estimatedTime\" \n                                    type=\"text\" \n                                    className=\"course--time--input\"\n                                    placeholder=\"Hours\" \n                                    value={estimatedTime}\n                                    onChange={this.change}                                   \n                                  />\n                              </div>\n                            </li>\n                            <li className=\"course--stats--list--item\">\n                              <h4>Materials Needed</h4>\n                              <div>\n                                  <textarea \n                                    id=\"materialsNeeded\" \n                                    name=\"materialsNeeded\" \n                                    className=\"\" \n                                    placeholder=\"List materials...\"\n                                    value={materialsNeeded}\n                                    onChange={this.change}\n                                  ></textarea>\n                                </div>\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                  </div>\n                </React.Fragment>\n              )  \n            }\n            />\n          </div>\n      </div>\n    );\n  }\n  \n  change = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    this.setState(() => {\n      return {\n        [name]: value\n      };\n    });\n  }\n  \n /**\n * use to update a course.\n */\n  submit = () => {  \n    const { context } = this.props;    \n    const authUser = context.authenticatedUser;\n\n    const emailAddress = authUser.emailAddress;\n    const password = authUser.password;\n    \n    // destructuring state values\n    const {\n      userId,\n      title,\n      description,\n      estimatedTime,\n      materialsNeeded,\n    } = this.state;\n    \n    // new course payload\n    const course = {\n      userId,\n      title,\n      description,\n      estimatedTime,\n      materialsNeeded,\n    }\n    \n    const id = this.props.match.params.id;\n\n    /**\n     * Update a course\n     *\n     * @param {course}  The course payload to update.\n     * @param {id} id of the course to update.\n     * @param {emailAddress} emailAddress of the authenticate user.\n     * @param {password} password of the authenticate user\n     * @return {promise} resolved value is either an array of errors \n     * (sent from the API if the response is 400), or an empty array (if the response is 201)\n     */\n    \n    context.data.updateCourse(course, id, emailAddress, password)\n      .then( errors => {\n          if(errors.message) {\n            this.setState({ errors: errors.message });\n          } else {\n            console.log('Course updated sussessfully');\n            this.props.history.push(\"/\");\n          }\n      })\n      .catch(err => {\n          this.props.history.push('/error');\n      })\n  }\n\n  // return to previousPage\n  cancel = () => {\n    this.props.history.go(-1);\n  }\n}\n \nexport default UpdateCourse;","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst UnhandledError = () => {\n  const history = useHistory();\n    const handleClick = () => {\n        history.push(\"/\");\n    }\n\n  return (\n    <div className=\"bounds\">\n      <h1>Error</h1>\n      <p>Sorry! We just encountered an unexpected error.</p>\n      <div className=\"pad-bottom\">\n          <button className=\"button\" onClick={handleClick} type=\"submit\"> Return </button>\n      </div>\n    </div>\n  )\n};\n\nexport default UnhandledError;\n\n\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { Consumer } from './Context';\n\nexport default ({ component: Component, ...rest }) => {\n  return (\n    <Consumer>\n      { context => (\n        <Route\n          {...rest}\n          render={ props => context.authenticatedUser ? (\n            <Component {...props} />\n          ): (\n            <Redirect to={{\n              pathname: '/signin',\n              state: { from: props.location },\n            }} />\n          )}\n        />\n      )}\n    </Consumer>\n  );\n};","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst Forbidden = () => {\n\n    const history = useHistory();\n\n    const handleClick = () => {\n        history.push(\"/\");\n    }\n\n   return (\n    <div className=\"bounds\">\n    <h1>Forbidden</h1>\n    <p>Oh oh! You can't access this page.</p>\n    <div className=\"pad-bottom\">\n        <button className=\"button\" onClick={handleClick} type=\"submit\"> Return </button>\n    </div>\n  </div>\n   )\n};\n\nexport default Forbidden","import React from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\nimport Header from './components/Header';\nimport NotFound from './components/NotFound';\nimport UserSignUp from './components/UserSignUp';\nimport UserSignIn from './components/UserSignIn';\nimport UserSignOut from './components/UserSignOut';\nimport Courses from './components/Courses';\nimport CourseDetail from \"./components/CourseDetail\";\nimport CreateCourse from \"./components/CreateCourse\";\nimport UpdateCourse from \"./components/UpdateCourse\";\nimport Authenticated from './components/Authenticated';\nimport UnhandledError from './components/UnhandledError';\n\n\n// New import\nimport withContext from './Context';\nimport PrivateRoute from './PrivateRoute';\nimport Forbidden from './components/Forbidden';\n\n// connect Header, Authenticated, UserSignUp and UsersignIn to Context\nconst HeaderWithContext = withContext(Header)\nconst AuthWithContext= withContext(Authenticated);\nconst UserSignUpWithContext = withContext(UserSignUp);\nconst UserSignInWithContext = withContext(UserSignIn);\nconst UserSignOutWithContext = withContext(UserSignOut);\nconst CourseDetailWithContext = withContext(CourseDetail);\nconst CreateCourseWithContext = withContext(CreateCourse);\nconst UpdateCourseWithContext = withContext(UpdateCourse)\n\n\n\nexport default () => (\n  <Router>\n    <div>\n      <HeaderWithContext />\n\n      <Switch>\n        <Route exact path=\"/\" render={(props)=> <Courses {...props}/>}/>\n        <PrivateRoute path=\"/authenticated\" component={AuthWithContext} />\n        <Route path=\"/signup\" component={UserSignUpWithContext} />\n        <Route path=\"/signin\" component={UserSignInWithContext} />\n        <Route path=\"/signout\" component={UserSignOutWithContext} />\n        <PrivateRoute path=\"/courses/create\" component={CreateCourseWithContext} />      \n        <Route exact path=\"/courses/:id\" component={CourseDetailWithContext} />   \n        <PrivateRoute exact path=\"/courses/:id/update\" component={UpdateCourseWithContext} /> \n        <Route path=\"/forbidden\" component={Forbidden} />\n        <Route path=\"/notfound\" component={NotFound} />\n        <Route path=\"/error\" component={UnhandledError} />\n      </Switch>\n    </div>\n  </Router>\n);\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport default ({ context }) => {\n  // const  authUser = context.authenticatedUser;\n  return (\n  <div className=\"bounds\">\n    <div className=\"grid-100\">\n      <Redirect to='/' />\n    </div>\n  </div>\n  );\n}","import React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nexport default ({context}) => {\n  // component calls signOut and updates state after render\n  useEffect(() =>  context.actions.signOut());\n\n  return (\n    <Redirect to=\"/\" />\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/global.css';\nimport './styles/new.css';\n\nimport { Provider } from './Context';\nimport App from './App';\n\nReactDOM.render(\n  <Provider>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n"],"sourceRoot":""}